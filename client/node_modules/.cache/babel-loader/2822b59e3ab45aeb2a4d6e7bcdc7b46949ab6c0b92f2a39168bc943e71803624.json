{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction useInViewport(ref, options) {\n  _s();\n  const [isInView, setIsInView] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setIsInView(entry.isIntersecting);\n    }, options);\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    const refCopy = ref.current;\n    return () => {\n      observer.unobserve(refCopy);\n    };\n  }, [ref, options]);\n  return isInView;\n}\n_s(useInViewport, \"CljPiJpva/9SgSrlkVLPLqzrE+U=\");\nexport default useInViewport;","map":{"version":3,"names":["useState","useEffect","useInViewport","ref","options","_s","isInView","setIsInView","observer","IntersectionObserver","entry","isIntersecting","current","observe","refCopy","unobserve"],"sources":["/home/zedcurl/Desktop/Projects/hostelApp/client/src/hooks/useInViewport.ts"],"sourcesContent":["import { useState, useEffect, RefObject } from \"react\";\n\nfunction useInViewport<T extends HTMLElement>(\n  ref: RefObject<T>,\n  options?: IntersectionObserverInit\n): boolean {\n  const [isInView, setIsInView] = useState<boolean>(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setIsInView(entry.isIntersecting);\n    }, options);\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    const refCopy = ref.current as HTMLElement;\n\n    return () => {\n      observer.unobserve(refCopy);\n    };\n  }, [ref, options]);\n  return isInView;\n}\n\nexport default useInViewport;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAEtD,SAASC,aAAaA,CACpBC,GAAiB,EACjBC,OAAkC,EACzB;EAAAC,EAAA;EACT,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAU,KAAK,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMO,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK;MACrDH,WAAW,CAACG,KAAK,CAACC,cAAc,CAAC;IACnC,CAAC,EAAEP,OAAO,CAAC;IAEX,IAAID,GAAG,CAACS,OAAO,EAAE;MACfJ,QAAQ,CAACK,OAAO,CAACV,GAAG,CAACS,OAAO,CAAC;IAC/B;IAEA,MAAME,OAAO,GAAGX,GAAG,CAACS,OAAsB;IAE1C,OAAO,MAAM;MACXJ,QAAQ,CAACO,SAAS,CAACD,OAAO,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAACX,GAAG,EAAEC,OAAO,CAAC,CAAC;EAClB,OAAOE,QAAQ;AACjB;AAACD,EAAA,CAtBQH,aAAa;AAwBtB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}